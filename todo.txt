WeeWikiPaint

Minimum Marketable Features:
+ marketing home page (episodes 1-32)
* single-user painting on home page (episodes 33+)
- collaborative painting
- support more browsers (Android, IE10?)
- wiki-fy the pages
- more complex painting?
- more collaborative features?

User Stories:
* drawing should continue even if user leaves boundaries (just pick up again when they come back in)
- 'clear screen' button
- quality user-facing site design
? click tracking needs to account for margin, border, and padding (if needed; fail fast if not)
  - test that em is converted px
- Site monitoring and logging
- Performance
- Scalability
- Deploy (including smoke test to ensure that div is in home page)
    (needs to depend on 'build'; just running foreman could give us outdated files)

Engineering Tasks:
* make sure it works when user lets go of mouse button outside web page entirely (and also outside browser)
- make sure it works when user does not let go of mouse button outside browser
- draw a single pixel when mouse is clicked (or screen is tapped)
- What is up with IE 8 failing when Chrome is not running?
- Deal with duplication in touch event testing (use Modernizr?)

To Do on current task:

- Create HtmlElement.documentBody?
- Eliminate need for JQuery element on HtmlElement constructor?

Future ideas:
- Create 'fail fast' assertion code
- Abstract test framework? (Swap out a different framework to make sure abstraction works)
- Static checking of function parameters (rather than writing tests)
- Handle errors properly in server.js
- server.stop() waits for open connections to close (e.g., Firefox keeps open connection).
  Make it forcibly close?
- Remove Node version duplication between package.json and Jakefile.js
- Fix httpGet duplication
- Ensure that every browser has same of number of tests running
- Automate CI script
- Resolve npm 'extraneous' warning (due to package.json not reflecting what's in node_modules)
- Convert 'client' to be proper object rather than global singleton?
- Upgrade to latest version of Karma (with new preprocessor support)?

Notes:
- NodeUnit default reporter has minor display issue on Windows
