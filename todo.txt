WeeWikiPaint

Minimum Marketable Features:
+ marketing home page (episodes 1-32)
* single-user painting on home page (episodes 33+)
- collaborative painting
- support more browsers (Android, IE10?)
- wiki-fy the pages
- more complex painting?
- more collaborative features?

User Stories:
* drawing should continue even if user leaves boundaries (just pick up again when they come back in)
- draw a single pixel when mouse is clicked (or screen is tapped)
- 'clear screen' button
- quality user-facing site design
- fix issue: drawing area doesn't quite fit to borders
  - correct in Safari, Mobile Safari, IE 8
  - can draw slightly outside border Chrome, Firefox
  - shifted slightly to top-left in IE 9
? click tracking needs to account for margin, border, and padding (if needed; fail fast if not)
  - test that em is converted px
- Site monitoring and logging
- Performance
  - Note: serious performance degradation in IE 8 as more lines drawn
- Scalability
- Deploy (including smoke test to ensure that div is in home page)
    (needs to depend on 'build'; just running foreman could give us outdated files)

Engineering Tasks:
* drawing doesn't work in IE8
- integrate

To Do on current task:
AT START OF NEXT EPISODE:
  - Upgraded Node
  - Laurent Bourgalt-Roy w/ a better way of smoke testing: http://www.letscodejavascript.com/v3/comments/live/101#comment-1095901476
* put tests around changes to html_element.js
  - setCapture/releaseCapture()
    - relativeX and relativeY does not work properly when setCapture is used?
- take a second look at HtmlElement.setCapture() -- is that the right abstraction?
- test-drive releaseCapture in client.js -- take a second look, does it need more specific tests?
- look for Modernizr/feature-based solution to browser.doesNotSendUserEventsToWindowObject()
- fix duplication of mouse positioning handling in our window-related client tests

Notes:
- NodeUnit default reporter has minor display issue on Windows
