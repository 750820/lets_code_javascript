WeeWikiPaint

Minimum Marketable Features:
+ marketing home page (episodes 1-32)
+ single-user painting on home page (episodes 33-200)
+ replace home page with professional design (episodes 201-321)
+ IE 11 support (and get rid of IE 8) (episodes 322-324)
+ Android support (episodes 325-327)
+ iOS 8 support (episode 328)
* replace 404 page with professional design (episodes 329+)
- responsive design
- accessibility
- polish
  - clear button retains focus when drawing (IE8, 9, Chrome)
  - drawing glitches occur when exiting drawing area that is flush against side of browser
  - one-pixel gap on right side of drawing area (Firefox, others unknown)
  - favicon
? multiple painting/erasing tools
- collaborative painting
- save the pages (persistence / databases)
- wiki-fy the pages
- more complex painting?
- more collaborative features?

User Stories to finish current MMF:
* update design
- release

Engineering Tasks:
* refactor our CSS
- Double-check manually, cross-browser
- integrate
- upgrade to iOS 9
- Load normalize.css in test frame (ref Laurent Bourgault-Roy E344 http://www.letscodejavascript.com/v3/comments/live/344#comment-2264149684)
- install csslint (ref Laurent Bourgault-Roy E339 http://www.letscodejavascript.com/v3/comments/live/339#comment-2240636858)
- Improve our client directory structure
- Split our CSS tests into multiple files

To Do on current task:
* factor out theme
  - Mobile Safari gives us strange result when we take out line-height property in '#tagline' rule
    - This is the result of font inflation and can be fixed with -ios-text-size-adjust: 100%
    - The normalize stylesheet already includes text-size-adjust
- In drawing area tests, use `frame.get` in nested describe blocks to reduce typos (ref Martin Grandrath E346 http://www.letscodejavascript.com/v3/comments/live/346#comment-2295085386)
- factor out layout (with TDD?)
  - should each block have a 'fill its container' test?
