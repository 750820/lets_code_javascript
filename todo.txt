WeeWikiPaint

Minimum Marketable Features:
+ marketing home page (episodes 1-32)
+ single-user painting on home page (episodes 33-200)
+ replace home page with professional design (episodes 201-321)
+ IE 11 support (and get rid of IE 8) (episodes 322-324)
+ Android support (episodes 325-327)
+ iOS 8 support (episode 328)
+ replace 404 page with professional design (episodes 329-369)
* collaborative painting (episode 370+)
- multiple servers
- responsive design
- accessibility
- polish
  - clear button retains focus when drawing (IE8, 9, Chrome)
  - drawing glitches occur when exiting drawing area that is flush against side of browser
  - one-pixel gap on right side of drawing area (Firefox, others unknown)
  - favicon
	- 'clear' button flashes rather than depressing (iOS)
	- 'clear' button depresses diagonally rather than vertically (IE 9, IE 11)
- multiple painting/erasing tools
- save the pages (persistence / databases)
- wiki-fy the pages
- more complex painting?
- more collaborative features?

User Stories to finish current MMF:
* see other users' mouse pointers
- multi-user clear button
- multi-user line drawing
- version synchronization across client/server
- offline handling
- collision-handling / conflicts / race conditions
- load management
- server monitoring / error handling
- security (handling bad data, denial of service attacks)

Engineering Tasks:
* Hook up the client UI code to the network abstraction
- Client: Receive pointer status from server
- Client: Make client display "ghost" pointers for other users
- Address duplication of 'mouse' event name between client and server
- Figure out bundling and distribution for socket.io client
- Figure out how to de-dupe require paths for common files (such as "_assert.js")
	- See Scott Corgan comment, E381: http://www.letscodejavascript.com/v3/comments/live/381#comment-2489897377

To Do on current task:
* Maybe real_time_network should actually be real_time_connection object rather than a module
- Inject network object
- Make spy
- Test-drive the actual code using spy
- Only send mouse pointer location when it's inside the drawing area
- Need to translate pageOffset to relativeOffset (do we need to improve design of offset translations?)
- Open question: how to make sure our test double matches our real code?